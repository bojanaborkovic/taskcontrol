//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TaskControlEntities : DbContext
    {
        public TaskControlEntities()
            : base("name=TaskControlEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<IssueType> IssueTypes { get; set; }
        public virtual DbSet<Priority> Priorities { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TaskAsigneeHistory> TaskAsigneeHistories { get; set; }
        public virtual DbSet<TaskStatusHistory> TaskStatusHistories { get; set; }
        public virtual DbSet<Note> Notes { get; set; }
        public virtual DbSet<RoleClaimsOnProject> RoleClaimsOnProjects { get; set; }
    
        public virtual ObjectResult<SearchUsersResult> SearchUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchUsersResult>("SearchUsers");
        }
    
        public virtual ObjectResult<ProjectResult> GetAllProjectsWithOwner()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProjectResult>("GetAllProjectsWithOwner");
        }
    
        public virtual ObjectResult<TaskDetailsResult> GetAllTasksDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskDetailsResult>("GetAllTasksDetails");
        }
    
        public virtual ObjectResult<GetTaskResult> GetTaskById(Nullable<long> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskResult>("GetTaskById", taskIdParameter);
        }
    
        public virtual ObjectResult<GetProjectStatistics_Result> GetProjectStatistics(Nullable<long> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectStatistics_Result>("GetProjectStatistics", projectIdParameter);
        }
    
        public virtual int GetTasksAudit(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageNumber, Nullable<int> pageSize, string orderBy)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("orderBy", orderBy) :
                new ObjectParameter("orderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTasksAudit", fromDateParameter, toDateParameter, pageNumberParameter, pageSizeParameter, orderByParameter);
        }
    
        public virtual ObjectResult<GetTasksAssigneStatusHistory_Result> GetTasksAssigneStatusHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTasksAssigneStatusHistory_Result>("GetTasksAssigneStatusHistory");
        }
    
        public virtual ObjectResult<GetAllTasksDetails_Result> GetAllTasksDetails1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTasksDetails_Result>("GetAllTasksDetails1");
        }
    }
}
