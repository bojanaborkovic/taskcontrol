
@model   IEnumerable<TaskControl.Models.ProjectViewModel>
@{
    ViewBag.Title = "Projects";
}

<h2>Projects</h2>

<p>
  <button class="btn btn-default btn-lg btn-success" type="button" onclick="location.href='@Url.Action("Create", "Project")'">
    Create new project
  </button>
</p>

<div class="grid">

@foreach (var item in Model)
{
	@*<div class="grid-sizer"></div>*@

	<div class="grid-item">
		@*<button style="float:right; margin-left: 10em;">@Html.ActionLink("Edit", "EditProject", new { projectId = item.Id })</button>*@	
		<div class="card">	
			<div class="card-block">

				<h2 class="card-title">
					@Html.ActionLink(item.Name, "EditProject", new { projectId = item.Id })
				</h2>

				<p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
					<span>Owner : @Html.DisplayFor(modelItem => item.Owner)</span>
					
					<br />
					<br />
        <div class="progress">
          <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@Html.DisplayFor(modelItem => item.TotalProgress)"
               aria-valuemin="0" aria-valuemax="100" style="width:@Html.DisplayFor(modelItem => item.TotalProgress)%">
           Complete 
          </div>
        </div>
				<div class="alert alert-success" role="alert">
					<strong>@Html.DisplayFor(modelItem => item.CompletedCount) tasks</strong> Completed
				</div>
				<div class="alert alert-warning" role="alert">
					<strong>@Html.DisplayFor(modelItem => item.InProgressCount) tasks</strong> In progress
				</div>
				<div class="alert alert-danger" role="alert">
					<strong>@Html.DisplayFor(modelItem => item.ToDoCount)  tasks</strong> To do
				</div>
			</div>
		</div>
	</div>

}

</div>

<script type="text/javascript">
	$('.grid').masonry({
		// options
		// use outer width of grid-sizer for columnWidth
		percentPosition: true,
		transitionDuration: 5,
		gutter: 10
	});
</script>
