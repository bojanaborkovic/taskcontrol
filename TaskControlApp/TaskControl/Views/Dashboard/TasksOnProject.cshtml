@model  TaskControl.Models.DashboardViewModel
@{ 
  string getTaskInfoById = Url.Action("GetTaskInfoById", "Dashboard");
   string updateTaskStatusUrl = Url.Action("UpdateTaskStatus", "Dashboard");
}


  <div>
    <h3>@Resources.Resources.ToDo_PlanningBoard_Title</h3><h3>@Resources.Resources.InProgress_PlanningBoard_Title</h3><h3>@Resources.Resources.Done_PlanningBoard_Title</h3>
  </div>

  <ul id="ToDo">
    @if (Model.TaskViewModel != null && Model.TaskViewModel.Count > 0)
    {
      foreach (var task in Model.TaskViewModel)
      {
        if (task.Status == "ToDo")
        {
          <li id="@task.Id" draggable="true" class="taskItem">@task.Title</li>
        }
      }
    }
  </ul>

    <ul id="InProgress">
  @if (Model.TaskViewModel != null && Model.TaskViewModel.Count > 0)
  {
    foreach (var task in Model.TaskViewModel)
    {
      if (task.Status == "InProgress")
      {
        <li id="@task.Id" draggable="true" class="taskItem"> @task.Title</li>
      }
    }
  }
  </ul>

  <ul id="Done">
    @if (Model.TaskViewModel != null && Model.TaskViewModel.Count > 0)
    {
      foreach (var task in Model.TaskViewModel)
      {
        if (task.Status == "Done")
        {
            <li id="@task.Id" draggable="true" class="taskItem">@task.Title</li>
        }
      }
    }

  </ul>
  <div id="taskInfoBox" style="display:none;" class="speech-bubble"> </div>

<script type="text/javascript">
  $(document).ready(function () {
    $(".taskItem").click(function (e) {
      debugger;
      e.preventDefault();
      var taskId = e.currentTarget.id;
      GetTaskInfo(taskId);
    });


    /* drag and drop functionality (plannig board) */
    $('#board li').bind('dragstart', function (event) {
      event.originalEvent.dataTransfer.setData("text/plain", event.target.getAttribute('id'));
    });

    $('#board ul').bind('dragover', function (event) {
      // debugger;
      event.preventDefault();
    });

    $('#board ul').bind('dragenter', function (event) {
      // debugger;
      $(this).addClass("over");
    });

    $('#board ul').bind('dragleave drop', function (event) {
      // debugger;
      $(this).removeClass("over");
    });

    $('#board li').bind('drop', function (event) {
      return false;
    });

    $('#board ul').bind('drop', function (event) {
      debugger;
      var listitem = event.originalEvent.dataTransfer.getData("text/plain"); // id of the task
      var newStatus = event.currentTarget.id;
      ChangeTaskStatus(newStatus, listitem);
      var newTask = document.getElementById(listitem);
      event.target.appendChild(newTask);
    });

    function ChangeTaskStatus(newStatus, taskId) {
      debugger;
      var modelObj = {};
      modelObj.StatusName = newStatus;
      modelObj.TaskId = taskId;

      // exucute ajax call to update task status
      $.ajax({
        type: "POST",
        url: '@updateTaskStatusUrl',
        data: JSON.stringify(modelObj),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (result) {

        },
        error: function (result) {
          //alert('error');
        }
      });
    }


    function GetTaskInfo(taskId) {
      // exucute ajax call to get info about the task
      $.ajax({
        type: "GET",
        url: '@getTaskInfoById',
        data: {
          taskId: taskId
        },
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (result) {
          document.getElementById('taskInfoBox').innerHTML = PrepareInfo(result);
          document.getElementById('taskInfoBox').style.display = "block";
        },
        error: function (result) {
          //alert('error');
        }
      });
    }

    function PrepareInfo(result) {
      var htmlText = '';
      for (var key in result) {
        if (result.hasOwnProperty(key)) {
          htmlText += '<p> <b>' + key + '</b>: ' + result[key] + '</p>';
        }
      }

      return htmlText;
    }

  });
</script>



