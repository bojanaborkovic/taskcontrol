@model  TaskControl.Models.DashboardViewModel

@{
  ViewBag.Title = "Dashboard";
  var taskList = ViewBag.TaskList;
  string getMyTasksUrl = Url.Action("GetTaskForUser", "Dashboard");
  string getAllTasksUrl = Url.Action("GetAllTasks", "Dashboard");
  string getTaskInfoById = Url.Action("GetTaskInfoById", "Dashboard");
  string updateTaskStatusUrl = Url.Action("UpdateTaskStatus", "Dashboard");
  string userId = ViewBag.UserId;
}

<div class="container">
  <div class="row">
    <div class="col-sm-6">
      <!-- planning board starts -->
      <h1>Planning board</h1>
      <div id="board">
        <div>
          <h3>ToDo</h3><h3>In Progress</h3><h3>Done</h3>
        </div>
      
        <ul id="ToDo">
          @foreach (var task in Model.TaskViewModel)
          {
            if (task.Status == "ToDo")
            {
              <li id="@task.Id" draggable="true" class="taskItem">@task.Title</li>
            }
          }    
        </ul>
          
        <ul id="InProgress">
          @foreach (var task in Model.TaskViewModel)
          {
            if (task.Status == "InProgress")
            {
            <li id="@task.Id" draggable="true" class="taskItem"> @task.Title</li>
            }
          }
        </ul>

        <ul id="Done">
          @foreach (var task in Model.TaskViewModel)
          {
            if (task.Status == "Done")
            {
            <li id="@task.Id" draggable="true" class="taskItem">@task.Title</li>
            }
          }

        </ul>
        <div id="taskInfoBox" style="display:none;" class="timeline-label"> </div> 
      </div>
      <!-- plannin board ends-->
      </div>  
        
    

    <div class="col-sm-4">
      <!-- timeline starts here-->
      <div class="timeline-centered" style="margin-top: 100px">
        @foreach (var item in Model.TaskAuditViewModel)
      {
          <article class="timeline-entry">

            <div class="timeline-entry-inner">

              <p><b>@Html.ActionLink(item.AsigneeChangedBy, "Details", "User", new { userId = item.AsigneeChangedById })</b> changed asignee to <b>@Html.ActionLink(item.AsigneeAfterUsername, "Details", "User", new { userId = item.AsigneeAfter })</b></p>

              <div class="timeline-icon bg-success">
                <i class="entypo-feather"></i>
              </div>
              <time class="timeline-time"><span style="margin-left: -30px">@item.AsigneeChangedOn</span> </time>


              <div class="timeline-label">
                <h2><a href="#">@item.StatusChangeBy</a> <span>changed Status to @item.StatusAfterName</span></h2>
              </div>
            </div>

          </article>
        }

      </div>
      <!--timeline ends here-->
    </div>
  </div>
</div>



  <script type="text/javascript">
    $(document).ready(function () {
      //var event = { id: 1, title: 'SuperCoolProject', start: new Date() };
      //var newEvent = {id : 2, title: 'Future project', start: '2017-09-20'}
      $('#mainCalendar').fullCalendar({
        defaultDate: '2017-09-05',
        editable: true,
        eventLimit: true, // allow "more" link when too many events
        //eventSources: [
        //  '/feed1.php',
        //  '/feed2.php'
        //]
      });
      var listOfTasks = @Html.Raw(taskList);

      $('#mainCalendar').fullCalendar('renderEvents', listOfTasks, true);


      /* drag and drop functionality (plannig board) */
      $('#board li').bind('dragstart', function(event) {
        event.originalEvent.dataTransfer.setData("text/plain",  event.target.getAttribute('id'));
      });

      $('#board ul').bind('dragover', function(event) {
        // debugger;
        event.preventDefault();
      });

      $('#board ul').bind('dragenter', function(event) {
        // debugger;
        $(this).addClass("over");
      });

      $('#board ul').bind('dragleave drop', function(event) {
        // debugger;
        $(this).removeClass("over");
      });

      $('#board li').bind('drop', function(event) {
        return false;
      });

      $('#board ul').bind('drop', function(event) {
        debugger;
        var listitem = event.originalEvent.dataTransfer.getData("text/plain"); // id of the task
        var newStatus = event.currentTarget.id;
        ChangeTaskStatus(newStatus, listitem);
        event.target.appendChild(document.getElementById(listitem));
        event.preventDefault();
      });

      $(".taskItem").click(function(e){
        e.preventDefault();
        var taskId = e.currentTarget.id;
        GetTaskInfo(taskId);
      });


      function GetTaskInfo(taskId)
      {
        // exucute ajax call to get info about the task
        $.ajax({
          type: "GET",
          url: '@getTaskInfoById',
          data :{
            taskId:  taskId
          },
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(result) {
            document.getElementById('taskInfoBox').innerHTML = PrepareInfo(result);
            document.getElementById('taskInfoBox').style.display = "block";
          },
          error: function(result) {
            //alert('error');
          }
        });
      }

      function ChangeTaskStatus(newStatus, taskId)
      {
        debugger;
        var modelObj = {};
        modelObj.StatusName = newStatus;
        modelObj.TaskId = taskId;

        // exucute ajax call to update task status
        $.ajax({
          type: "POST",
          url: '@updateTaskStatusUrl',
          data: JSON.stringify(modelObj),
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(result) {
            
          },
          error: function(result) {
            //alert('error');
          }
        });
      }

      function PrepareInfo(result)
      {
        var htmlText = '';
        for(var key in result) {
          if (result.hasOwnProperty(key)) {
            htmlText += '<p>'+ key +': ' + result[key] + '</p>';
          }
        }

        return htmlText;
      }

      /* ajax calls for 'MyTasks' and 'All tasks'*/
      $("#myTasks").click(function(e) {
        e.preventDefault();
        $.ajax({
          type: "GET",
          url: '@getMyTasksUrl',
          data :{
            userId:  '@userId'
          },
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(result) {
            $('#mainCalendar').fullCalendar('removeEvents');
            var listOfTasks = result;

            $('#mainCalendar').fullCalendar('renderEvents', listOfTasks, true);
          },
          error: function(result) {
            //alert('error');
          }
        });
      });

      $("#allTasks").click(function(e) {
        e.preventDefault();
        $.ajax({
          type: "GET",
          url: '@getAllTasksUrl',
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(result) {
            $('#mainCalendar').fullCalendar('removeEvents');
            var listOfTasks = result;

            $('#mainCalendar').fullCalendar('renderEvents', listOfTasks, true);
          },
          error: function(result) {
            // alert('error');
          }
        });
      });

    });
  </script>


