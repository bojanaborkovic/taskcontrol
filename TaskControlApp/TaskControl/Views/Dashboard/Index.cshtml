@model  TaskControl.Models.DashboardViewModel

@{
  ViewBag.Title = "Dashboard";
  var taskList = ViewBag.TaskList;
  string getMyTasksUrl = Url.Action("GetTaskForUser", "Dashboard");
  string getAllTasksUrl = Url.Action("GetAllTasks", "Dashboard");
  string getTaskInfoById = Url.Action("GetTaskInfoById", "Dashboard");
  string updateTaskStatusUrl = Url.Action("UpdateTaskStatus", "Dashboard");
  string getTasksOnProjectUrl = Url.Action("GetTasksForUserOnProject", "Dashboard");
  string userId = ViewBag.UserId;
}

<div class="container">
  <div class="row" id="mainDashboard">
    <div class="col-sm-6">

      
      <!-- planning board starts -->
      <h1>@Resources.Resources.PlanningBoard_Label_Dashboard <img src="~/Content/images/tasks.png" /></h1>
     
      <div class="btn-group" role="group" aria-label="..." style="float:right">
         @Resources.Resources.SelectedProject_Label<div id="selectedProject"></div>
        <br/>
        @if (Model.OwnersProjects != null && Model.OwnersProjects.Count > 0)
        {
          foreach (var item in Model.OwnersProjects)
          {
            <button type="button" selected="false" class="btn btn-default projectButton" projectId="@item.Id">@item.Name</button>
          }
        }
      </div>
      <div id="board">
      </div>

      <!-- plannin board ends-->
      </div>  
        
    

    <div class="col-sm-4" id="activityPane">
      <!-- timeline starts here-->
      <h3 style="float:right">@Resources.Resources.ActivityStream_Label_Dashboard <img src="~/Content/images/activity.png" /></h3>

      <div class="timeline-centered" style="margin-top: 100px">
      
        @if (Model.TaskAuditViewModel != null && Model.TaskAuditViewModel.Count > 0)
        {
         
          foreach (var item in Model.TaskAuditViewModel)
          {

            <article class="timeline-entry">

              <div class="timeline-entry-inner">


                <div class="timeline-icon bg-success">
                  <i class="entypo-feather"></i>
                </div>
                <time class="timeline-time"><span style="margin-left: -30px">@item.ChangedOn</span> </time>
                @if (item.ChangeType == TaskControlDTOs.TaskChangeType.StatusChange)
                {
                  <div class="timeline-label">
                    <p><b>@Html.ActionLink(item.ChangedByUsername, "Details", "User", new { userId = item.ChangedById }, null)</b> @Resources.Resources.ChangeStatusFrom_Text <b> @item.ChangedFrom</b> @Resources.Resources.ChangeStatusTo_Text <b> @item.ChangedTo</b> @Resources.Resources.OnTask_Text <b>@Html.ActionLink(item.TaskTitle, "Preview", "Task", new { taskId = item.TaskId }, null)</b> @Resources.Resources.OnProject_Text <b>@Html.ActionLink(item.ProjectName, "ViewProject", "Project", new { projectId = item.ProjectId }, null)</b> </p>
                  </div>
                }

                @if (item.ChangeType == TaskControlDTOs.TaskChangeType.AsigneeChange)
                {
                  <div class="timeline-label">
                    @if (item.ChangedFrom != "N/A")
                    {
                    <p><b>@Html.ActionLink(item.ChangedByUsername, "Details", "User", new { userId = item.ChangedById }, null)</b> @Resources.Resources.ChangedAssigneeFrom_Text <b>@Html.ActionLink(item.ChangedFrom, "Details", "User", new { userId = item.ChangedFromId }, null)</b> @Resources.Resources.ToAssignee_Text <b>@Html.ActionLink(item.ChangedTo, "Details", "User", new { userId = item.ChangedToId }, null)</b> @Resources.Resources.OnTask_Text  <b>@Html.ActionLink(item.TaskTitle, "Preview", "Task", new { taskId = item.TaskId }, null)</b> @Resources.Resources.OnProject_Text <b>@Html.ActionLink(item.ProjectName, "ViewProject", "Project", new { projectId = item.ProjectId }, null)</b> </p>
                    }
                    else
                    {
                      <p><b>@Html.ActionLink(item.ChangedByUsername, "Details", "User", new { userId = item.ChangedById }, null)</b> @Resources.Resources.ChangedAssigneeFrom_Text <b>@item.ChangedFrom</b> @Resources.Resources.ToAssignee_Text <b>@Html.ActionLink(item.ChangedTo, "Details", "User", new { userId = item.ChangedToId }, null)</b> @Resources.Resources.OnTask_Text <b>@Html.ActionLink(item.TaskTitle, "Preview", "Task", new { taskId = item.TaskId }, null)</b> @Resources.Resources.OnProject_Text <b>@Html.ActionLink(item.ProjectName, "ViewProject", "Project", new { projectId = item.ProjectId }, null)</b> </p>
                    }
                  </div>
                }

              </div>

            </article>

          }
        }


      </div>
      <!--timeline ends here-->
      <div class="timeline-entry" style="float:right" id="loadEverything"><b>@Html.ActionLink(Resources.Resources.LoadEverything_Label, "GetAllHistory", "Dashboard")</b></div>

    </div>
  </div>
</div>



  <script type="text/javascript">
    $(document).ready(function () {

      $('#mainCalendar').fullCalendar({
        defaultDate: '2017-09-05',
        editable: true,
        eventLimit: true, // allow "more" link when too many events
      });
      var listOfTasks = @Html.Raw(taskList);

      $('#mainCalendar').fullCalendar('renderEvents', listOfTasks, true);

      

      /* ajax calls for 'MyTasks' and 'All tasks'*/
      $("#myTasks").click(function(e) {
        e.preventDefault();
        $.ajax({
          type: "GET",
          url: '@getMyTasksUrl',
          data :{
            userId:  '@userId'
          },
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(result) {
            $('#mainCalendar').fullCalendar('removeEvents');
            var listOfTasks = result;

            $('#mainCalendar').fullCalendar('renderEvents', listOfTasks, true);
          },
          error: function(result) {
            //alert('error');
          }
        });
      });

      $("#allTasks").click(function(e) {
        e.preventDefault();
        $.ajax({
          type: "GET",
          url: '@getAllTasksUrl',
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function(result) {
            $('#mainCalendar').fullCalendar('removeEvents');
            var listOfTasks = result;

            $('#mainCalendar').fullCalendar('renderEvents', listOfTasks, true);
          },
          error: function(result) {
            // alert('error');
          }
        });
      });


     

    });

    $(window).on("load", GetTasksOnProject);
    /* project filtering for board*/
    function GetTasksOnProject(e)
    {
      //var projectId = e.currentTarget.getAttribute('projectId');
      var projectId = e.currentTarget.id;

      if(e.type == "load")
      {
        projectId = null;
      }

      if(e.type == "click")
      {
        projectId = e.currentTarget.getAttribute('projectId');
      }

      $.ajax({
        type: "GET",
        url: '@getTasksOnProjectUrl',
        data :{
          projectId:  projectId != null ? projectId : null
        },
        //contentType: "application/json; charset=utf-8",
        //dataType: "json",
        success: function(result) {
         // $("#board").html(result);
        },
        error: function(result) {
          //alert('error');
        }
      }).done(function(partialViewResult) {
        $("#board").html(partialViewResult);
      });

      $(".projectButton").click(function(e){
        e.preventDefault();
        ResetSelectedFlag();
        e.currentTarget.setAttribute("selected", "true");
        GetTasksOnProject(e);
        GetSelectedProject();
      });

      function GetSelectedProject()
      {
        var numberOfProjects = $(".projectButton").length;
        for(var i=0; i<numberOfProjects; i++)
        {
          var selected = $(".projectButton")[i].getAttribute('selected');
          if(selected != null && selected == "true")
          {
            $("#selectedProject").html('<b>' + $(".projectButton")[i].innerHTML + '</b>');
          }
        }
      }

      function ResetSelectedFlag()
      {
        var numberOfProjects = $(".projectButton").length;
        for(var i=0; i<numberOfProjects; i++)
        {
          $(".projectButton")[i].setAttribute("selected", "false");
        }
      }

    }
  </script>


