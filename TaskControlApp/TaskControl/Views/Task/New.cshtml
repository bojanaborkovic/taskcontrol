@using TaskControl.ViewDataPreparers
@using TaskControlDTOs
@model TaskControl.Models.TaskViewModel

@{
	ViewBag.Title = Resources.Resources.NewTask_Title;
	var issueTypes = ViewData[IssueTypePreparer.ViewDataKey] as List<IssueTypeEntity>;
	List<SelectListItem> issueTypesItems = issueTypes.ConvertAll(a =>
	{
		return new SelectListItem()
		{
			Text = a.Name,
			Value = a.Id.ToString(),
			Selected = false
		};
	});

	var statuses = ViewData[StatusPreparer.ViewDataKey] as List<StatusEntity>;
	List<SelectListItem> statusItems = statuses.ConvertAll(a =>
	{
		return new SelectListItem()
		{
			Text = a.Name,
			Value = a.Id.ToString(),
			Selected = false
		};
	});

	var priorities = ViewData[PriorityPreparer.ViewDataKey] as List<PriorityEntity>;
	List<SelectListItem> priorItems = priorities.ConvertAll(a =>
	{
		return new SelectListItem()
		{
			Text = a.Name,
			Value = a.Id.ToString(),
			Selected = false
		};
	});

  var userNames = ViewBag.UserNames;
  var projectNames = ViewBag.ProjectNames;

}
<link href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet" />

<h2>@Resources.Resources.NewTask_Title</h2>

@using (Html.BeginForm("Create", "Task", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            <b class="control-label col-md-2"> @Resources.Resources.Title_Label </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
          <b class="control-label col-md-2">@Resources.Resources.Description_Label </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        <b class="control-label col-md-2">  @Resources.Resources.Assignee_Label </b>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Asignee, new { htmlAttributes = new { @class = "form-control" } })*@
				
									@Html.EditorFor(m => m.Asignee, new { htmlAttributes = new { @class = "form-control autoasignee", @placeholder = "Enter username" } })
							
                @Html.ValidationMessageFor(model => model.Asignee, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
          <b class="control-label col-md-2"> @Resources.Resources.IssueType_Label </b>
            <div class="col-md-10">
							@Html.DropDownListFor(x => x.IssueType, issueTypesItems, "Select Issue Type", new { @class = "form-control" })
						</div>
        </div>

        <div class="form-group">
          <b class="control-label col-md-2"> @Resources.Resources.Status_Label</b>
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Status, statusItems, "Select Status", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
          <b class="control-label col-md-2"> @Resources.Resources.Reporter_Label </b>
            <div class="col-md-10">
              @*@Html.EditorFor(model => model.Reporter, new { htmlAttributes = new { @class = "form-control" } })*@
              @Html.EditorFor(m => m.Reporter, new { htmlAttributes = new { @class = "form-control autoasignee", @placeholder = "Enter username" } })
              @Html.ValidationMessageFor(model => model.Reporter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
         <b class="control-label col-md-2"> @Resources.Resources.Priority_Label </b>
            <div class="col-md-10">
							@Html.DropDownListFor(x => x.Priority, priorItems, "Select Priority", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
          <b class="control-label col-md-2"> @Resources.Resources.Projects_Label </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control autoproject" } })
                @Html.ValidationMessageFor(model => model.Project, "", new { @class = "text-danger" })
            </div>
        </div>

      <div class="form-group">
        <b class="control-label col-md-2"> @Resources.Resources.DueDate_Label </b>
        <div class="col-md-10">
          @*@Html.TextBoxFor(model => model.DueDate, new { @class = "form-control datepicker", placeholder = "Enter due date here..", @id ="dueDate" })*@
          @Html.TextBoxFor(model => model.DueDate,  new { @class = "form-control datepicker", placeholder = "Enter due date here..", @id = "dueDate"  })


          @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })

        </div>
      </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Resources.Create_Button" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>

      
}

<div>
    @Html.ActionLink(Resources.Resources.BackToList_Link, "Index")
</div>


<script type="text/javascript">
	$(document).ready(function () { // will trigger when the document is ready
	  $('.datepicker').datetimepicker();

	  $('#datetimepicker1').datetimepicker();
    //fix for chrome!!! to get rid of US date validation
	  jQuery.validator.methods["date"] = function (value, element) { return true; } 


		var availableUsers = @Html.Raw(userNames);	  
    
	  var availableProjects = @Html.Raw(projectNames);

		$(".autoasignee").autocomplete({
        source: availableUsers

    });

		$(".autoproject").autocomplete({
        source: availableProjects

		});

		//$('#dueDate').removeAttr("data-val");


    });
</script>
