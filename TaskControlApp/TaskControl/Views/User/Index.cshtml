@using TaskControl.Models
@using PagedList.Mvc;

@model PagedList.IPagedList<UserViewModel>

 @{
   ViewBag.Title = "Users";
   string currentFilter = ViewBag.CurrentFilter;
   string currentSort = ViewBag.CurrentSort;
   if (string.IsNullOrEmpty(currentSort))
   {
     currentSort = "Id_desc";
   }
}
<h2 class="text-primary">Users</h2>
<br/>
<button class="btn btn-default btn-lg btn-success" type="button" onclick="location.href='@Url.Action("CreateUser", "User")'">
	Add new user
</button>
<br/>
<br/>

<div class="input-group">
@using (Html.BeginForm("Search", "User", FormMethod.Get))
{
  <form>
    <div class="form-group">

			@Html.Label("Find by name:", htmlAttributes: new { @class = "control-label" })
			<div class="col-md-10">
				@Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
				<br/>
				
				</div>
			<div class="col-md-offset-10">
				<input type="submit" value="Search" class="btn btn-primary btn-lg" id="searchUsers" />
			</div>
			</div>
			
		
  </form>

}
</div>
<br />
<br />

  <table class="table table-striped col-md-6">
    <thead>
      <tr>
        <th>
          @Html.ActionLink("#", "Search", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.IdSortParam))
          @Html.SortIdentifier(currentSort, "Id")
        </th>
        <th>
          @Html.ActionLink("Username", "Search", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.UsernameSortParam))
          @Html.SortIdentifier(currentSort, "username")
        </th>
        <th>Email</th>
        <th>
          @Html.ActionLink("First Name", "Search", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.FirstNameSortParam))
          @Html.SortIdentifier(currentSort, "firstname")
        </th>
        <th>Last Name</th>
        <th>Role</th>
      </tr>
    </thead>
    @foreach (var item in Model)
    {
    <tbody>
      <tr>
        <td>
          <b>@Html.ActionLink(item.UserName, "Details", new { userId = item.UserId })</b>
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.RoleName)
        </td>
      </tr>
    </tbody>
    }
  </table>


  <div class="pager">
    @Html.PagedListPager(Model, pageNumber => Url.Action("Search", new
    {
      pageNumber,
      sortOrder = ViewBag.currentSort, 
      currentFilter = ViewBag.CurrentFilter
    }))
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
  </div>


