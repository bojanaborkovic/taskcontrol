@using TaskControl.Models
@using PagedList.Mvc;

@model PagedList.IPagedList<RoleViewModel>

@{
  ViewBag.Title = Resources.Resources.Roles_Menu_Item;
  string currentFilter = ViewBag.CurrentFilter;
  string currentSort = ViewBag.CurrentSort;
  string urlUserRole = Url.Action("AddUserToRole", "Roles");
	string urlNewRole = Url.Action("NewRole", "Roles");

  if (string.IsNullOrEmpty(currentSort))
  {
    currentSort = "Id_desc";
  }
}


@*<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>*@


<h2 class="text-primary">@Resources.Resources.Roles_Menu_Item</h2>

<div id='userInRoleModal' class="modal fade" role="dialog" tabindex="-1" data-url='@urlUserRole'>
 
</div>

<div id='newRoleModal' class="modal fade" role="dialog" tabindex="-1" data-url='@urlNewRole'>

</div>

<button id='addUserToRole' class="btn btn-primary">@Resources.Resources.АddUserToRole_Button</button>
<button id='addNewRole' class="btn btn-secondary btn-success">@Resources.Resources.AddNewRole_Button</button>



<table class="table table-striped col-md-6">
  <thead>
    <tr>
      <th>
        @Html.ActionLink("#", "Search", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.IdSortParam))
        @Html.SortIdentifier(currentSort, "Id")
      </th>
      <th>
        @Html.ActionLink(Resources.Resources.RoleName_Label, "Search", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.RoleNameSortParam))
        @Html.SortIdentifier(currentSort, "rolename")
      </th>
			<th>
				@Resources.Resources.Description_Label
			</th>
			<th>
				@Resources.Resources.DateCreated_Label
			</th>
    </tr>
  </thead>
  @foreach (var item in Model)
  {
  <tbody>
    <tr>
      <td>
        @Html.DisplayFor(modelItem => item.RoleId)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.RoleName)
      </td>
			<td>
				@Html.DisplayFor(modelItem => item.Description)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.DateCreated)
			</td>
    </tr>
  </tbody>
  }
</table>


@if (Model.Count > 1)
{
  <div class="pager">
    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new
{
  pageNumber,
  sortOrder = ViewBag.currentSort,
  currentFilter = ViewBag.CurrentFilter
}))
    @Resources.Resources.Page_Label @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.Resources.Page_Of_Label @Model.PageCount
  </div>
}


<script type="text/javascript">
  $(document).ready(function () {
    $('#addUserToRole').click(function () {
      var url = $('#userInRoleModal').data('url');

      $.get(url, function (data) {
        $('#userInRoleModal').html(data);

        $('#userInRoleModal').modal('show');
      });
    });

    $('#addNewRole').click(function () {
    	var url = $('#newRoleModal').data('url');

    	$.get(url, function (data) {
    		$('#newRoleModal').html(data);

    		$('#newRoleModal').modal('show');
    	});
    });

 
  });
</script>
